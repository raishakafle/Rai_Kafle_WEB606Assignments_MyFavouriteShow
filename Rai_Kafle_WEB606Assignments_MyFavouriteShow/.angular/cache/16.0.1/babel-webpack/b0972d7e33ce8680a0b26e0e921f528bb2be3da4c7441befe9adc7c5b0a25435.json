{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass TypeFilterPipe {\n  transform(contentList, type) {\n    if (!type) {\n      // Filter content with no type\n      return contentList.filter(content => !content.type);\n    } else {\n      // Filter content by type\n      return contentList.filter(content => content.type === type);\n    }\n  }\n}\nTypeFilterPipe.ɵfac = function TypeFilterPipe_Factory(t) {\n  return new (t || TypeFilterPipe)();\n};\nTypeFilterPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"typeFilter\",\n  type: TypeFilterPipe,\n  pure: true\n});\nexport { TypeFilterPipe };","map":{"version":3,"names":["TypeFilterPipe","transform","contentList","type","filter","content","pure"],"sources":["C:\\Users\\acer\\Documents\\GitHub\\Rai_Kafle_WEB606Assignments_MyFavouriteShow\\Rai_Kafle_WEB606Assignments_MyFavouriteShow\\src\\app\\type-filter.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Content } from './helper-files/content-interface';\r\n\r\n@Pipe({\r\n  name: 'typeFilter'\r\n})\r\nexport class TypeFilterPipe implements PipeTransform {\r\n  transform(contentList: Content[], type: string): Content[] {\r\n    if (!type) {\r\n      // Filter content with no type\r\n      return contentList.filter(content => !content.type);\r\n    } else {\r\n      // Filter content by type\r\n      return contentList.filter(content => content.type === type);\r\n    }\r\n  }\r\n}"],"mappings":";AAGA,MAGaA,cAAc;EACzBC,SAASA,CAACC,WAAsB,EAAEC,IAAY;IAC5C,IAAI,CAACA,IAAI,EAAE;MACT;MACA,OAAOD,WAAW,CAACE,MAAM,CAACC,OAAO,IAAI,CAACA,OAAO,CAACF,IAAI,CAAC;KACpD,MAAM;MACL;MACA,OAAOD,WAAW,CAACE,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACF,IAAI,KAAKA,IAAI,CAAC;;EAE/D;;AATWH,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;;QAAdA,cAAc;EAAAM,IAAA;AAAA;SAAdN,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}