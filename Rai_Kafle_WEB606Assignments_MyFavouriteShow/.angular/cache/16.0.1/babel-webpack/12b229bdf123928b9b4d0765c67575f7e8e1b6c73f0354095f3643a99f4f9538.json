{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nclass MessagesService {\n  constructor() {\n    this.messages = [];\n    this.messagesSubject = new Subject();\n  }\n  addMessage(message) {\n    this.messages.push(message);\n    this.messagesSubject.next(this.messages);\n  }\n  getMessages() {\n    return this.messagesSubject.asObservable();\n  }\n}\nMessagesService.ɵfac = function MessagesService_Factory(t) {\n  return new (t || MessagesService)();\n};\nMessagesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: MessagesService,\n  factory: MessagesService.ɵfac,\n  providedIn: 'root'\n});\nexport { MessagesService };","map":{"version":3,"names":["Subject","MessagesService","constructor","messages","messagesSubject","addMessage","message","push","next","getMessages","asObservable","factory","ɵfac","providedIn"],"sources":["C:\\Users\\acer\\Documents\\GitHub\\Rai_Kafle_WEB606Assignments_MyFavouriteShow\\Rai_Kafle_WEB606Assignments_MyFavouriteShow\\src\\app\\services\\messages.service.ts"],"sourcesContent":["\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessagesService {\r\n  private messages: string[] = [];\r\n  private messagesSubject: Subject<string[]> = new Subject<string[]>();\r\n\r\n  constructor() {}\r\n\r\n  addMessage(message: string): void {\r\n    this.messages.push(message);\r\n    this.messagesSubject.next(this.messages);\r\n  }\r\n\r\n  getMessages(): Observable<string[]> {\r\n    return this.messagesSubject.asObservable();\r\n  }\r\n}"],"mappings":"AAGA,SAAqBA,OAAO,QAAQ,MAAM;;AAE1C,MAGaC,eAAe;EAI1BC,YAAA;IAHQ,KAAAC,QAAQ,GAAa,EAAE;IACvB,KAAAC,eAAe,GAAsB,IAAIJ,OAAO,EAAY;EAErD;EAEfK,UAAUA,CAACC,OAAe;IACxB,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACD,OAAO,CAAC;IAC3B,IAAI,CAACF,eAAe,CAACI,IAAI,CAAC,IAAI,CAACL,QAAQ,CAAC;EAC1C;EAEAM,WAAWA,CAAA;IACT,OAAO,IAAI,CAACL,eAAe,CAACM,YAAY,EAAE;EAC5C;;AAbWT,eAAe,C;mBAAfA,eAAe;AAAA;AAAfA,eAAe,C;SAAfA,eAAe;EAAAU,OAAA,EAAfV,eAAe,CAAAW,IAAA;EAAAC,UAAA,EAFd;AAAM;SAEPZ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}